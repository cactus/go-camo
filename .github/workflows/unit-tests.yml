name: unit-tests
on:
  workflow_dispatch:
  push:
    branches: ["**"]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Src Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - run: mkdir -p .cache/tools ~/go/pkg/mod ~/.cache/go-build
      - name: Cache tools and Go
        id: cache-tools-and-go-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            .cache/tools
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ runner.arch }}-cache-${{ hashFiles('tools/tools.conf', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cache-

      - uses: jdx/mise-action@v3
        with:
          experimental: true

      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: just build

      - name: Check
        env:
          GOPROXY: "https://proxy.golang.org"
        run: just check

      - name: Tests
        env:
          GOPROXY: "https://proxy.golang.org"
          CI: true
        run: just test

      - name: always save tools and go cache
        id: cache-tools-and-go-save
        if: always() && steps.cache-tools-and-go-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache-tools-and-go-restore.outputs.cache-primary-key }}
          path: |
            .cache/tools
            ~/.cache/go-build
            ~/go/pkg/mod

  test-qemu:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64]

    steps:
      - name: Src Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - run: mkdir -p .cache/tools ~/go/pkg/mod ~/.cache/go-build
      - name: Cache tools and Go
        id: cache-tools-and-go-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            .cache/tools
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ runner.arch }}-cache-${{ hashFiles('tools/tools.conf', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cache-

      - uses: jdx/mise-action@v3
        with:
          experimental: true

      - name: Install QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
          GOARCH: ${{ matrix.arch }}
        run: just build

      - name: Tests
        env:
          GOPROXY: "https://proxy.golang.org"
          GOARCH: ${{ matrix.arch }}
          CI: true
        run: just test

      - name: always save tools and go cache
        id: cache-tools-and-go-save
        if: always() && steps.cache-tools-and-go-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache-tools-and-go-restore.outputs.cache-primary-key }}
          path: |
            .cache/tools
            ~/.cache/go-build
            ~/go/pkg/mod
