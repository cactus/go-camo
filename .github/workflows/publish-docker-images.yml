name: publish-docker-images
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: docker-publish
    runs-on: ubuntu-latest

    steps:
      - name: Src Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: write tags env vars
        run: |
          TAG=$(git describe --tags)
          LATEST_TAG=$(git tag -l | grep -viE '(alpha|beta)' | sort -V | tail -n 1)
          GITHASH="$(git rev-parse HEAD)"
          echo "TAG=$TAG"
          echo "TAG=${TAG}" >> "$GITHUB_ENV"
          echo "LATEST_TAG=${LATEST_TAG}"
          echo "LATEST_TAG=${LATEST_TAG}" >> "$GITHUB_ENV"
          echo "GITHASH=${GITHASH}"
          echo "GITHASH=${GITHASH}" >> "$GITHUB_ENV"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            cactus4docker/go-camo
            ghcr.io/cactus/go-camo
          tags: |
            # set latest tag for master branch
            type=raw,value=${{ env.TAG }}
            type=raw,value=latest,enable=${{ env.TAG == env.LATEST_TAG }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          provenance: false
          sbom: false
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            GITHASH=${{env.GITHASH}}
            APP_VER=${{env.TAG}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
